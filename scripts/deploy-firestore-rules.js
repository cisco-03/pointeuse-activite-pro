#!/usr/bin/env node

/**
 * Script pour d√©ployer les r√®gles Firestore (ESM compatible)
 *
 * Pr√©requis:
 * 1. Installer Firebase CLI: npm install -g firebase-tools
 * 2. Se connecter: firebase login
 * 3. Initialiser le projet: firebase init firestore
 *
 * Usage:
 *   node scripts/deploy-firestore-rules.js --project <project-id>
 *   # ou d√©finir la variable d'environnement FIREBASE_PROJECT
 */

import { execSync } from 'node:child_process';
import fs from 'node:fs';
import path from 'node:path';
import { fileURLToPath } from 'node:url';

console.log('üî• D√©ploiement des r√®gles Firestore...');

// R√©solution __dirname en ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// V√©rifier que les fichiers existent
const rulesFile = path.join(__dirname, '..', 'firestore.rules');
const configFile = path.join(__dirname, '..', 'firebase.json');

if (!fs.existsSync(rulesFile)) {
    console.error('‚ùå Fichier firestore.rules introuvable');
    process.exit(1);
}

if (!fs.existsSync(configFile)) {
    console.error('‚ùå Fichier firebase.json introuvable');
    process.exit(1);
}

// R√©cup√©rer le projectId via --project ou env
const args = process.argv.slice(2);
const projectArgIndex = args.findIndex(a => a === '--project');
let projectId = process.env.FIREBASE_PROJECT || '';
if (projectArgIndex !== -1 && args[projectArgIndex + 1]) {
    projectId = args[projectArgIndex + 1];
}

try {
    // Construire la commande
    const baseCmd = 'firebase deploy --only firestore:rules';
    const cmd = projectId ? `${baseCmd} --project ${projectId}` : baseCmd;

    if (!projectId) {
        console.warn('‚ö†Ô∏è  Aucun projectId fourni. La CLI utilisera le projet actif si configur√©.');
        console.warn('    Passez --project <project-id> ou d√©finissez FIREBASE_PROJECT pour √©viter cette alerte.');
    }

    console.log('üì§ D√©ploiement en cours...');
    execSync(cmd, {
        stdio: 'inherit',
        cwd: path.join(__dirname, '..')
    });

    console.log('‚úÖ R√®gles Firestore d√©ploy√©es avec succ√®s !');
    console.log('');
    console.log('üîç Pour v√©rifier les r√®gles:');
    console.log('   firebase firestore:rules get');
    console.log('');
    console.log('üß™ Pour tester les r√®gles:');
    console.log('   firebase emulators:start --only firestore');

} catch (error) {
    console.error('‚ùå Erreur lors du d√©ploiement:', error?.message || error);
    console.log('');
    console.log('üí° Solutions possibles:');
    console.log('   1. V√©rifiez que vous √™tes connect√©: firebase login');
    console.log('   2. V√©rifiez le projet: firebase projects:list');
    console.log('   3. Sp√©cifiez le projet: --project <project-id> ou FIREBASE_PROJECT=...');
    process.exit(1);
}
